name: Generate TypeScript Data Files

on:
  pull_request:
    paths:
      - "src/main/resources/data/**"
      - "src/main/resources/planets/**"
      - "src/main/resources/systems/**"
  push:
    branches: [main]
    paths:
      - "src/main/resources/data/**"
      - "src/main/resources/planets/**"
      - "src/main/resources/systems/**"

jobs:
  generate-data:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2 # Need previous commit to compare changes

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Detect changed data categories
        id: detect-changes
        run: |
          echo "Detecting changes in data directories..."

          # Initialize arrays to track changes
          changed_categories=()

          # Function to check if directory has changes
          check_changes() {
            local dir=$1
            local category=$2
            if git diff --name-only HEAD~1 HEAD | grep -q "^${dir}/"; then
              echo "Changes detected in ${dir} -> ${category}"
              changed_categories+=("$category")
            fi
          }

          # Check each data category
          check_changes "src/main/resources/data/technologies" "tech"
          check_changes "src/main/resources/data/tokens" "tokens"
          check_changes "src/main/resources/data/units" "units"
          check_changes "src/main/resources/planets" "planets"
          check_changes "src/main/resources/data/relics" "relics"
          check_changes "src/main/resources/data/secret_objectives" "secret_objectives"
          check_changes "src/main/resources/data/public_objectives" "public_objectives"
          check_changes "src/main/resources/data/promissory_notes" "promissory_notes"
          check_changes "src/main/resources/data/leaders" "leaders"
          check_changes "src/main/resources/data/colors" "colors"
          check_changes "src/main/resources/data/agendas" "agendas"
          check_changes "src/main/resources/systems" "systems"

          # Convert array to space-separated string
          categories_string=$(IFS=' '; echo "${changed_categories[*]}")
          echo "changed_categories=${categories_string}" >> $GITHUB_OUTPUT

          if [ ${#changed_categories[@]} -eq 0 ]; then
            echo "No data changes detected"
            echo "has_changes=false" >> $GITHUB_OUTPUT
          else
            echo "Data changes detected in: ${categories_string}"
            echo "has_changes=true" >> $GITHUB_OUTPUT
          fi

      - name: Generate TypeScript files
        if: steps.detect-changes.outputs.has_changes == 'true'
        run: |
          echo "Generating TypeScript files for changed categories..."
          categories="${{ steps.detect-changes.outputs.changed_categories }}"

          for category in $categories; do
            echo "Generating $category..."
            python scripts/generate_data.py "$category"
          done

          # List generated files
          echo "Generated files:"
          ls -la *.ts || echo "No .ts files found"

      - name: Checkout target repository
        if: steps.detect-changes.outputs.has_changes == 'true'
        uses: actions/checkout@v4
        with:
          repository: "ti4_web_new"
          token: ${{ secrets.TARGET_REPO_TOKEN }}
          path: "target-repo"

      - name: Copy generated files to target repo
        if: steps.detect-changes.outputs.has_changes == 'true'
        run: |
          echo "Copying generated TypeScript files to target repository..."

          # Ensure data directory exists
          mkdir -p target-repo/data

          # Copy all generated .ts files
          for file in *.ts; do
            if [ -f "$file" ]; then
              echo "Copying $file to target-repo/data/"
              cp "$file" target-repo/data/
            fi
          done

          # List files in target directory
          echo "Files in target repo data directory:"
          ls -la target-repo/data/

      - name: Create Pull Request
        if: steps.detect-changes.outputs.has_changes == 'true'
        run: |
          cd target-repo

          # Configure git
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

          # Create and switch to new branch
          BRANCH_NAME="auto-update-data-${{ github.run_number }}"
          git checkout -b "$BRANCH_NAME"

          # Add and commit changes
          git add .
          git commit -m "Update generated data files from TI4_map_generator_bot"

          # Push branch
          git push origin "$BRANCH_NAME"

          # Create pull request using GitHub CLI
          gh pr create \
            --title "Auto-generated: Update data files" \
            --body "This pull request contains automatically generated TypeScript data files.

          **Changed categories:** ${{ steps.detect-changes.outputs.changed_categories }}

          **Source commit:** ${{ github.sha }}
          **Source repository:** ${{ github.repository }}

          Generated by GitHub Actions workflow in TI4_map_generator_bot." \
            --head "$BRANCH_NAME" \
            --base main
        env:
          GH_TOKEN: ${{ secrets.TARGET_REPO_TOKEN }}

      - name: Output PR details
        if: steps.detect-changes.outputs.has_changes == 'true'
        run: |
          echo "‚úÖ Data generation completed successfully!"
          echo "üìÅ Changed categories: ${{ steps.detect-changes.outputs.changed_categories }}"
          echo "üîÑ Pull request created in ti4_web_new repository"
