on: workflow_dispatch
name: StartBot
concurrency:
  group: "Start Bot"
jobs:
  build:
    name: Start Bot
    runs-on: ubuntu-latest
    steps:
    - name: executing remote ssh commands using password
      uses: appleboy/ssh-action@master
      env:
        AWS_KEY: ${{ secrets.IMG_AWS_KEY }}
        AWS_SECRET: ${{ secrets.IMG_AWS_SECRET }}
      with:
        host: ${{ secrets.SSH_HOST }}
        username: ${{ secrets.SSH_USERNAME }}
        password: ${{ secrets.SSH_PASSWORD }}
        port: ${{ secrets.SSH_PORT }}
        envs: AWS_KEY, AWS_SECRET
        script: |
          cd /root/ti4bot/TI4_map_generator_bot
          echo "Building docker image..."
          docker version
          docker build --build-arg BOT_KEY=$DISCORD_BOT_KEY --build-arg USER=$DISCORD_USER --build-arg SERVER=$DISCORD_SERVER --build-arg SERVER2=$DISCORD_SERVER2 --build-arg AWS_SECRET=$AWS_SECRET --build-arg AWS_KEY=$AWS_KEY -t tibot .
          echo "Starting Container..."
          docker run -v /root/ti4bot/ti4bot_saves:/opt/STORAGE -d --restart unless-stopped -m 7g -e REPO_DISPATCH_TOKEN=$REPO_DISPATCH_TOKEN tibot $DISCORD_BOT_TOKEN $DISCORD_BOT_USERID 943410040369479690 847560709730730064 1062139934745559160 1090910555327434774 1145823841227112598 1176104225932058694 1209956332380229672 1250131684393881610 1312882116597518416
          echo "Cleaning up docker stuff..."
          docker rm $(docker ps --filter status=exited -q) || true
          docker rmi -f $(docker images --filter "dangling=true" -q) || true
          echo "DONE!"
